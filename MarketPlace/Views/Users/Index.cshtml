@model MarketPlace.Models.User.UserUpdateModel

@{
    ViewBag.Title = "Index";
}

<h2>@MarketPlace.Resources.Models.Users.UserRegisterModel.My_Account</h2>

<div class="container py-5">
    <div class="form-group">
        @Html.HiddenFor(n => n.UserID)
        @Html.LabelFor(n => n.Login)
        @Html.TextBoxFor(n => n.Login, new { @class = "form-control", @readonly = true })
    </div>
    <div class="form-group">
        @Html.LabelFor(n => n.Phone)
        @Html.TextBoxFor(n => n.Phone, new { @class = "form-control", required = true, @readonly = true })
        @Html.ValidationMessageFor(n => n.Phone, "", new { @class = "text-danger" })
    </div>

    @Html.ActionLink(MarketPlace.Resources.Models.Users.UserRegisterModel.Password_Change, "ChangePassword", "Users", new { @class = "btn btn-primary mt-3" })
</div>

<style>
    .tabs {
        display: flex;
        justify-content: center;
    }

    .offer-tab {
        width: 170px;
        height: 100px;
        text-align: center;
        background: linear-gradient(217deg, white, white 70.71%);
        color: black;
        font-size: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0px 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: .4s;
    }

    .offer-tab-clicked {
        transition: .3s;
        background: linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%), linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%), linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%);
        color: white;
    }
</style>

<div class="container py-3">
    <div class="tabs">
        <div class="offer-tab" id="tab1">@MarketPlace.Resources.Views.General.Layout.Published</div>
        <div class="offer-tab" id="tab2">@MarketPlace.Resources.Views.General.Layout.Favorite</div>
    </div>
    <div class="result" id="results">

    </div>
</div>

<script>
    let tab1 = document.getElementById("tab1");
    let tab2 = document.getElementById("tab2");
    let resultsContainer = document.getElementById("results");

    tab1.addEventListener("click", e => {
        tab1.classList.add("offer-tab-clicked");
        tab2.classList.remove("offer-tab-clicked");
        getOffers("UserOffers");
    })

    tab2.addEventListener("click", e => {
        tab2.classList.add("offer-tab-clicked");
        tab1.classList.remove("offer-tab-clicked");
        getOffers("UserFavoriteOffers");
    })


    let getOffers = (action) => {
        $.ajax({
            url: `/Search/${action}`,
            type: 'GET',
            success: function (data) {
                resultsContainer.innerHTML = data;
            },
            error: function (XMLHttpRequest, ajaxOptions, ex) {
                console.log('error');
            }
        });
    }

</script>

